[[prebuilt-rules-0-13-1-summary]]
[role="xpack"]
== Prebuilt rules updates for downloadable package 0.13.1

This section lists all updates to prebuilt rules released via the detection rules fleet integration.

Rule updates and all changes can be found in the https://github.com/elastic/detection-rules/compare/v7.13.0...integration-v0.13.1?file-filters%5B%5D=.toml[detection-rules] repo.

[width="100%",options="header"]
|==============================================
|Rule |Description |Tags |Status |Version

|https://github.com/elastic/detection-rules/blob/integration-v0.13.1/rules/aws/exfiltration_ec2_vm_export_failure.toml[AWS EC2 VM Export Failure] | Identifies an attempt to export an AWS EC2 instance. A virtual machine (VM) export may indicate an attempt to extract or exfiltrate information. | [Elastic] [Cloud] [AWS] [Continuous Monitoring] [SecOps] [Asset Visibility] | new | 1

|https://github.com/elastic/detection-rules/blob/integration-v0.13.1/rules/windows/defense_evasion_amsienable_key_mod.toml[Modification of AmsiEnable Registry Key] | Jscript tries to query the AmsiEnable registry key from the HKEY_USERS registry hive before initializing Antimalware Scan Interface (AMSI). If this key is set to 0, AMSI is not enabled for the Jscript process. An adversary can modify this key to disable AMSI protections. | [Elastic] [Host] [Windows] [Threat Detection] [Defense Evasion] | new | 1

|https://github.com/elastic/detection-rules/blob/integration-v0.13.1/rules/windows/defense_evasion_suspicious_execution_from_mounted_device.toml[Suspicious Execution from a Mounted Device] | Identifies when a script interpreter or signed binary is launched via a non-standard working directory. An attacker may use this technique to evade defenses. | [Elastic] [Host] [Windows] [Threat Detection] [Defense Evasion] | new | 1

|https://github.com/elastic/detection-rules/blob/integration-v0.13.1/rules/windows/defense_evasion_unusual_network_connection_via_dllhost.toml[Unusual Network Connection via DllHost] | Identifies unusual instances of dllhost.exe making outbound network connections. This may indicate adversarial Command and Control activity. | [Elastic] [Host] [Windows] [Threat Detection] [Defense Evasion] | new | 1

|<<anomalous-process-for-a-linux-population, Anomalous Process For a Linux Population>> | Searches for rare processes running on multiple Linux hosts in an entire fleet or network. This reduces the detection of false positives since automated maintenance processes usually only run occasionally on a single machine but are common to all or many hosts in a fleet. | [Elastic] [Host] [Linux] [Threat Detection] [ML] | updated | 6

|<<anomalous-process-for-a-windows-population, Anomalous Process For a Windows Population>> | Searches for rare processes running on multiple hosts in an entire fleet or network. This reduces the detection of false positives since automated maintenance processes usually only run occasionally on a single machine but are common to all or many hosts in a fleet. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 6

|<<anomalous-windows-process-creation, Anomalous Windows Process Creation>> | Identifies unusual parent-child process relationships that can indicate malware execution or persistence mechanisms. Malicious scripts often call on other applications and processes as part of their exploit payload. For example, when a malicious Office document runs scripts as part of an exploit payload, Excel or Word may start a script interpreter process, which, in turn, runs a script that downloads and executes malware. Another common scenario is Outlook running an unusual process when malware is downloaded in an email. Monitoring and identifying anomalous process relationships is a method of detecting new and emerging malware that is not yet recognized by anti-virus scanners. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 5

|<<apple-script-execution-followed-by-network-connection, Apple Script Execution followed by Network Connection>> | Detects execution via the Apple script interpreter (osascript) followed by a network connection from the same process within a short time period. Adversaries may use malicious scripts for execution and command and control. | [Elastic] [Host] [macOS] [Threat Detection] [Command and Control] [Execution] | updated | 3

|<<attempts-to-brute-force-a-microsoft-365-user-account, Attempts to Brute Force a Microsoft 365 User Account>> | Identifies attempts to brute force a Microsoft 365 user account. An adversary may attempt a brute force attack to obtain unauthorized access to user accounts. | [Elastic] [Cloud] [Microsoft 365] [Continuous Monitoring] [SecOps] [Identity and Access] | updated | 4

|<<attempts-to-brute-force-an-okta-user-account, Attempts to Brute Force an Okta User Account>> | Identifies when an Okta user account is locked out 3 times within a 3 hour window. An adversary may attempt a brute force or password spraying attack to obtain unauthorized access to user accounts. The default Okta authentication policy ensures that a user account is locked out after 10 failed authentication attempts. | [Elastic] [Identity] [Okta] [Continuous Monitoring] [SecOps] [Identity and Access] | updated | 5

|<<command-prompt-network-connection, Command Prompt Network Connection>> | Identifies cmd.exe making a network connection. Adversaries could abuse cmd.exe to download or execute malware from a remote URL. | [Elastic] [Host] [Windows] [Threat Detection] [Execution] | updated | 7

|<<component-object-model-hijacking, Component Object Model Hijacking>> | Identifies Component Object Model (COM) hijacking via registry modification. Adversaries may establish persistence by executing malicious content triggered by hijacked references to COM objects. | [Elastic] [Host] [Windows] [Threat Detection] [Persistence] | updated | 4

|<<connection-to-external-network-via-telnet, Connection to External Network via Telnet>> | Telnet provides a command line interface for communication with a remote device or server. This rule identifies Telnet network connections to publicly routable IP addresses. | [Elastic] [Host] [Linux] [Threat Detection] [Lateral Movement] | updated | 6

|<<connection-to-internal-network-via-telnet, Connection to Internal Network via Telnet>> | Telnet provides a command line interface for communication with a remote device or server. This rule identifies Telnet network connections to non-publicly routable IP addresses. | [Elastic] [Host] [Linux] [Threat Detection] [Lateral Movement] | updated | 6

|<<dns-activity-to-the-internet, DNS Activity to the Internet>> | This rule detects when an internal network client sends DNS traffic directly to the Internet. This is atypical behavior for a managed network, and can be indicative of malware, exfiltration, command and control, or, simply, misconfiguration. This DNS activity also impacts your organization's ability to provide enterprise monitoring and logging of DNS, and opens your network to a variety of abuses and malicious communications. | [Elastic] [Network] [Threat Detection] [Command and Control] | updated | 9

|<<high-number-of-okta-user-password-reset-or-unlock-attempts, High Number of Okta User Password Reset or Unlock Attempts>> | Identifies a high number of Okta user password reset or account unlock attempts. An adversary may attempt to obtain unauthorized access to Okta user accounts using these methods and attempt to blend in with normal activity in their target's environment and evade detection. | [Elastic] [Identity] [Okta] [Continuous Monitoring] [SecOps] [Identity and Access] | updated | 5

|<<macos-installer-spawns-network-event, macOS Installer Spawns Network Event>> | Identifies when the built in macOS Installer program generates a network event after attempting to install a .pkg file. This activity has been observed being leveraged by malware. | [Elastic] [Host] [macOS] [Threat Detection] [Execution] | updated | 2

|<<network-connection-via-certutil, Network Connection via Certutil>> | Identifies certutil.exe making a network connection. Adversaries could abuse certutil.exe to download a certificate, or malware, from a remote URL. | [Elastic] [Host] [Windows] [Threat Detection] [Command and Control] | updated | 6

|<<network-connection-via-compiled-html-file, Network Connection via Compiled HTML File>> | Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. Adversaries may conceal malicious code in a CHM file and deliver it to a victim for execution. CHM content is loaded by the HTML Help executable program (hh.exe). | [Elastic] [Host] [Windows] [Threat Detection] [Execution] | updated | 8

|<<network-connection-via-msxsl, Network Connection via MsXsl>> | Identifies msxsl.exe making a network connection. This may indicate adversarial activity as msxsl.exe is often leveraged by adversaries to execute malicious scripts and evade detection. | [Elastic] [Host] [Windows] [Threat Detection] [Defense Evasion] | updated | 7

|<<network-connection-via-registration-utility, Network Connection via Registration Utility>> | Identifies the native Windows tools regsvr32.exe, regsvr64.exe, RegSvcs.exe, or RegAsm.exe making a network connection. This may be indicative of an attacker bypassing allowlists or running arbitrary scripts via a signed Microsoft binary. | [Elastic] [Host] [Windows] [Threat Detection] [Execution] | updated | 9

|<<network-connection-via-signed-binary, Network Connection via Signed Binary>> | Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Adversaries may use these binaries to 'live off the land' and execute malicious files that could bypass application allowlists and signature validation. | [Elastic] [Host] [Windows] [Threat Detection] [Defense Evasion] | updated | 8

|<<network-traffic-to-rare-destination-country, Network Traffic to Rare Destination Country>> | A machine learning job detected a rare destination country name in the network logs. This can be due to initial access, persistence, command-and-control, or exfiltration activity. For example, when a user clicks on a link in a phishing email or opens a malicious document, a request may be sent to download and run a payload from a server in a country which does not normally appear in network traffic or business work-flows. Malware instances and persistence mechanisms may communicate with command-and-control (C2) infrastructure in their country of origin, which may be an unusual destination country for the source network. | [Elastic] [Network] [Threat Detection] [ML] | updated | 2

|<<rdp-remote-desktop-protocol-from-the-internet, RDP (Remote Desktop Protocol) from the Internet>> | This rule detects network events that may indicate the use of RDP traffic from the Internet. RDP is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector. | [Elastic] [Host] [Network] [Threat Detection] [Command and Control] | updated | 9

|<<roshal-archive-rar-or-powershell-file-downloaded-from-the-internet, Roshal Archive (RAR) or PowerShell File Downloaded from the Internet>> | Detects a Roshal Archive (RAR) file or PowerShell script downloaded from the internet by an internal host. Gaining initial access to a system and then downloading encoded or encrypted tools to move laterally is a common practice for adversaries as a way to protect their more valuable tools and TTPs. This may be atypical behavior for a managed network and can be indicative of malware, exfiltration, or command and control. | [Elastic] [Network] [Threat Detection] [Command and Control] | updated | 5

|<<rpc-remote-procedure-call-from-the-internet, RPC (Remote Procedure Call) from the Internet>> | This rule detects network events that may indicate the use of RPC traffic from the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector. | [Elastic] [Host] [Network] [Threat Detection] [Initial Access] | updated | 9

|<<rpc-remote-procedure-call-to-the-internet, RPC (Remote Procedure Call) to the Internet>> | This rule detects network events that may indicate the use of RPC traffic to the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector. | [Elastic] [Host] [Network] [Threat Detection] [Initial Access] | updated | 9

|<<spike-in-firewall-denies, Spike in Firewall Denies>> | A machine learning job detected an unusually large spike in network traffic that was denied by network access control lists (ACLs) or firewall rules. Such a burst of denied traffic is usually caused by either 1) a mis-configured application or firewall or 2) suspicious or malicious activity. Unsuccessful attempts at network transit, in order to connect to command-and-control (C2), or engage in data exfiltration, may produce a burst of failed connections. This could also be due to unusually large amounts of reconnaissance or enumeration traffic. Denial-of-service attacks or traffic floods may also produce such a surge in traffic. | [Elastic] [Network] [Threat Detection] [ML] | updated | 2

|<<spike-in-network-traffic, Spike in Network Traffic>> | A machine learning job detected an unusually large spike in network traffic. Such a burst of traffic, if not caused by a surge in business activity, can be due to suspicious or malicious activity. Large-scale data exfiltration may produce a burst of network traffic; this could also be due to unusually large amounts of reconnaissance or enumeration traffic. Denial-of-service attacks or traffic floods may also produce such a surge in traffic. | [Elastic] [Network] [Threat Detection] [ML] | updated | 2

|<<spike-in-network-traffic-to-a-country, Spike in Network Traffic To a Country>> | A machine learning job detected an unusually large spike in network activity to one destination country in the network logs. This could be due to unusually large amounts of reconnaissance or enumeration traffic. Data exfiltration activity may also produce such a surge in traffic to a destination country which does not normally appear in network traffic or business work-flows. Malware instances and persistence mechanisms may communicate with command-and-control (C2) infrastructure in their country of origin, which may be an unusual destination country for the source network. | [Elastic] [Network] [Threat Detection] [ML] | updated | 2

|<<suspicious-dll-loaded-for-persistence-or-privilege-escalation, Suspicious DLL Loaded for Persistence or Privilege Escalation>> | Identifies the loading of a non Microsoft signed DLL that is missing on a default Windows install (phantom DLL) or one that can be loaded from a different location by a native Windows process. This may be abused to persist or elevate privileges via privileged file write vulnerabilities. | [Elastic] [Host] [Windows] [Threat Detection] [Persistence] [Privilege Escalation] | updated | 2

|<<unusual-linux-network-port-activity, Unusual Linux Network Port Activity>> | Identifies unusual destination port activity that can indicate command-and-control, persistence mechanism, or data exfiltration activity. Rarely used destination port activity is generally unusual in Linux fleets, and can indicate unauthorized access or threat actor activity. | [Elastic] [Host] [Linux] [Threat Detection] [ML] | updated | 5

|<<unusual-linux-process-calling-the-metadata-service, Unusual Linux Process Calling the Metadata Service>> | Looks for anomalous access to the metadata service by an unusual process. The metadata service may be targeted in order to harvest credentials or user data scripts containing secrets. | [Elastic] [Host] [Linux] [Threat Detection] [ML] | updated | 3

|<<unusual-linux-user-calling-the-metadata-service, Unusual Linux User Calling the Metadata Service>> | Looks for anomalous access to the cloud platform metadata service by an unusual user. The metadata service may be targeted in order to harvest credentials or user data scripts containing secrets. | [Elastic] [Host] [Linux] [Threat Detection] [ML] | updated | 3

|<<unusual-linux-username, Unusual Linux Username>> | A machine learning job detected activity for a username that is not normally active, which can indicate unauthorized changes, activity by unauthorized users, lateral movement, or compromised credentials. In many organizations, new usernames are not often created apart from specific types of system activities, such as creating new accounts for new employees. These user accounts quickly become active and routine. Events from rarely used usernames can point to suspicious activity. Additionally, automated Linux fleets tend to see activity from rarely used usernames only when personnel log in to make authorized or unauthorized changes, or threat actors have acquired credentials and log in for malicious purposes. Unusual usernames can also indicate pivoting, where compromised credentials are used to try and move laterally from one host to another. | [Elastic] [Host] [Linux] [Threat Detection] [ML] | updated | 6

|<<unusual-network-connection-via-rundll32, Unusual Network Connection via RunDLL32>> | Identifies unusual instances of rundll32.exe making outbound network connections. This may indicate adversarial Command and Control activity. | [Elastic] [Host] [Windows] [Threat Detection] [Defense Evasion] | updated | 10

|<<unusual-process-for-a-linux-host, Unusual Process For a Linux Host>> | Identifies rare processes that do not usually run on individual hosts, which can indicate execution of unauthorized services, malware, or persistence mechanisms. Processes are considered rare when they only run occasionally as compared with other processes running on the host. | [Elastic] [Host] [Linux] [Threat Detection] [ML] | updated | 6

|<<unusual-process-for-a-windows-host, Unusual Process For a Windows Host>> | Identifies rare processes that do not usually run on individual hosts, which can indicate execution of unauthorized services, malware, or persistence mechanisms. Processes are considered rare when they only run occasionally as compared with other processes running on the host. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 6

|<<unusual-windows-network-activity, Unusual Windows Network Activity>> | Identifies Windows processes that do not usually use the network but have unexpected network activity, which can indicate command-and-control, lateral movement, persistence, or data exfiltration activity. A process with unusual network activity can denote process exploitation or injection, where the process is used to run persistence mechanisms that allow a malicious actor remote access or control of the host, data exfiltration, and execution of unauthorized network applications. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 6

|<<unusual-windows-path-activity, Unusual Windows Path Activity>> | Identifies processes started from atypical folders in the file system, which might indicate malware execution or persistence mechanisms. In corporate Windows environments, software installation is centrally managed and it is unusual for programs to be executed from user or temporary directories. Processes executed from these locations can denote that a user downloaded software directly from the Internet or a malicious script or macro executed malware. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 5

|<<unusual-windows-process-calling-the-metadata-service, Unusual Windows Process Calling the Metadata Service>> | Looks for anomalous access to the metadata service by an unusual process. The metadata service may be targeted in order to harvest credentials or user data scripts containing secrets. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 3

|<<unusual-windows-user-calling-the-metadata-service, Unusual Windows User Calling the Metadata Service>> | Looks for anomalous access to the cloud platform metadata service by an unusual user. The metadata service may be targeted in order to harvest credentials or user data scripts containing secrets. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 3

|<<unusual-windows-username, Unusual Windows Username>> | A machine learning job detected activity for a username that is not normally active, which can indicate unauthorized changes, activity by unauthorized users, lateral movement, or compromised credentials. In many organizations, new usernames are not often created apart from specific types of system activities, such as creating new accounts for new employees. These user accounts quickly become active and routine. Events from rarely used usernames can point to suspicious activity. Additionally, automated Linux fleets tend to see activity from rarely used usernames only when personnel log in to make authorized or unauthorized changes, or threat actors have acquired credentials and log in for malicious purposes. Unusual usernames can also indicate pivoting, where compromised credentials are used to try and move laterally from one host to another. | [Elastic] [Host] [Windows] [Threat Detection] [ML] | updated | 6

|<<vnc-virtual-network-computing-from-the-internet, VNC (Virtual Network Computing) from the Internet>> | This rule detects network events that may indicate the use of VNC traffic from the Internet. VNC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector. | [Elastic] [Host] [Network] [Threat Detection] [Command and Control] | updated | 9

|<<vnc-virtual-network-computing-to-the-internet, VNC (Virtual Network Computing) to the Internet>> | This rule detects network events that may indicate the use of VNC traffic to the Internet. VNC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector. | [Elastic] [Host] [Network] [Threat Detection] [Command and Control] | updated | 9

|==============================================
